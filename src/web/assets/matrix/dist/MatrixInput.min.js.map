{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./MatrixInput.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","$","Craft","MatrixInput","Garnish","Base","extend","id","blockTypes","blockTypesByHandle","inputNamePrefix","inputIdPrefix","showingAddBlockMenu","addBlockBtnGroupWidth","addBlockBtnContainerWidth","$container","$blockContainer","$addBlockBtnContainer","$addBlockBtnGroup","$addBlockBtnGroupBtns","blockSort","blockSelect","totalNewBlocks","init","settings","this","formatInputId","maxBlocks","setSettings","defaults","children","$addBlockMenuBtn","data","setNewBlockBtn","length","blockType","handle","$blocks","collapsedBlocks","getCollapsedBlockIds","DragSort","axis","filter","$targetItem","hasClass","getSelectedItems","collapseDraggees","magnetStrength","helperLagBase","helperOpacity","onSortChange","resetItemOrder","Select","multi","vertical","checkboxMode","$block","blockId","newMatch","match","parseInt","block","MatrixBlock","inArray","collapse","addListener","ev","type","target","addBlock","MenuBtn","onOptionSelect","option","updateAddBlockBtn","$doc","ready","trigger","width","addClass","removeClass","navigator","userAgent","indexOf","requestAnimationFrame","css","canAddMoreBlocks","$items","eq","$actionMenu","find","parent","$insertBefore","autofocus","html","getBlockTypeByHandle","staticBlocks","window","draftEditor","pause","insertBefore","appendTo","$fieldsContainer","bodyHtml","getParsedBlockHtml","footHtml","getHiddenBlockCss","velocity","opacity","$bod","append","initUiElements","addItems","scrollContainerToElement","first","resume","collapseSelectedBlocks","callOnSelectedBlocks","expandSelectedBlocks","disableSelectedBlocks","enableSelectedBlocks","deleteSelectedBlocks","fn","$selectedItems","marginBottom","outerHeight","replace","RegExp","placeholderKey","collapsedBlockStorageKey","systemUid","localStorage","filterArray","split","setCollapsedBlockIds","ids","join","rememberCollapsedBlockId","Storage","push","forgetCollapsedBlockId","collapsedBlocksIndex","splice","matrix","$titlebar","$previewContainer","$collapsedInput","isNew","collapsed","substr","$menuBtn","menuBtn","menu","onMenuOptionSelect","on","prev","next","hasAttr","_handleTitleBarClick","preventDefault","toggle","expand","animate","previewHtml","$fields","$field","$inputs","inputPreviewText","j","$input","$maybeLightswitchContainer","text","getText","getInputPostVal","Array","trim","duration","height","show","hide","setTimeout","val","collapsedContainerHeight","expandedContainerHeight","displayValue","display","disable","enable","moveUp","$prev","moveDown","$next","insertAfter","batchAction","totalSelected","isSelected","$option","confirm","selfDestruct","remove","jQuery"],"mappings":"mBACE,IAAIA,iBAAmB,GAGvB,SAASC,oBAAoBC,UAG5B,GAAGF,iBAAiBE,UACnB,OAAOF,iBAAiBE,UAAUC,QAGnC,IAAIC,OAASJ,iBAAiBE,UAAY,CACzCG,EAAGH,SACHI,GAAG,EACHH,QAAS,IAUV,OANAI,QAAQL,UAAUM,KAAKJ,OAAOD,QAASC,OAAQA,OAAOD,QAASF,qBAG/DG,OAAOE,GAAI,EAGJF,OAAOD,QAKfF,oBAAoBQ,EAAIF,QAGxBN,oBAAoBS,EAAIV,iBAGxBC,oBAAoBU,EAAI,SAASR,QAASS,KAAMC,QAC3CZ,oBAAoBa,EAAEX,QAASS,OAClCG,OAAOC,eAAeb,QAASS,KAAM,CAAEK,YAAY,EAAMC,IAAKL,UAKhEZ,oBAAoBkB,EAAI,SAAShB,SACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,QAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,QAAS,aAAc,CAAEmB,OAAO,KAQvDrB,oBAAoBsB,EAAI,SAASD,MAAOE,MAEvC,GADU,EAAPA,OAAUF,MAAQrB,oBAAoBqB,QAC/B,EAAPE,KAAU,OAAOF,MACpB,GAAW,EAAPE,MAA8B,iBAAVF,OAAsBA,OAASA,MAAMG,WAAY,OAAOH,MAChF,IAAII,GAAKX,OAAOY,OAAO,MAGvB,GAFA1B,oBAAoBkB,EAAEO,IACtBX,OAAOC,eAAeU,GAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,QACtD,EAAPE,MAA4B,iBAATF,MAAmB,IAAI,IAAIM,OAAON,MAAOrB,oBAAoBU,EAAEe,GAAIE,IAAK,SAASA,KAAO,OAAON,MAAMM,MAAQC,KAAK,KAAMD,MAC9I,OAAOF,IAIRzB,oBAAoB6B,EAAI,SAAS1B,QAChC,IAAIS,OAAST,QAAUA,OAAOqB,WAC7B,SAASM,aAAe,OAAO3B,OAAgB,SAC/C,SAAS4B,mBAAqB,OAAO5B,QAEtC,OADAH,oBAAoBU,EAAEE,OAAQ,IAAKA,QAC5BA,QAIRZ,oBAAoBa,EAAI,SAASmB,OAAQC,UAAY,OAAOnB,OAAOoB,UAAUC,eAAe5B,KAAKyB,OAAQC,WAGzGjC,oBAAoBoC,EAAI,IAIjBpC,oBAAoBA,oBAAoBqC,EAAI,G,4BClFrD,SAAUC,GAMNC,MAAMC,YAAcC,QAAQC,KAAKC,OAAO,CACpCC,GAAI,KACJC,WAAY,KACZC,mBAAoB,KACpBC,gBAAiB,KACjBC,cAAe,KAEfC,qBAAqB,EACrBC,sBAAuB,KACvBC,0BAA2B,KAE3BC,WAAY,KACZC,gBAAiB,KACjBC,sBAAuB,KACvBC,kBAAmB,KACnBC,sBAAuB,KAEvBC,UAAW,KACXC,YAAa,KACbC,eAAgB,EAEhBC,KAAM,cAAShB,GAAIC,WAAYE,gBAAiBc,UAAU,eAyBlDzD,EAEJ,IA1BA0D,KAAKlB,GAAKA,GACVkB,KAAKjB,WAAaA,WAClBiB,KAAKf,gBAAkBA,gBACvBe,KAAKd,cAAgBT,MAAMwB,cAAcD,KAAKf,iBAGtB,iBAAbc,WACPA,SAAW,CAACG,UAAWH,WAE3BC,KAAKG,YAAYJ,SAAUtB,MAAMC,YAAY0B,UAE7CJ,KAAKV,WAAad,EAAE,IAAMwB,KAAKlB,IAC/BkB,KAAKT,gBAAkBS,KAAKV,WAAWe,SAAS,WAChDL,KAAKR,sBAAwBQ,KAAKV,WAAWe,SAAS,YACtDL,KAAKP,kBAAoBO,KAAKR,sBAAsBa,SAAS,aAC7DL,KAAKN,sBAAwBM,KAAKP,kBAAkBY,SAAS,QAC7DL,KAAKM,iBAAmBN,KAAKR,sBAAsBa,SAAS,YAE5DL,KAAKV,WAAWiB,KAAK,SAAUP,MAE/BA,KAAKQ,iBAELR,KAAKhB,mBAAqB,GAIrB1C,EAAI,EAAGA,EAAI0D,KAAKjB,WAAW0B,OAAQnE,IAAK,CACzC,IAAIoE,UAAYV,KAAKjB,WAAWzC,GAChC0D,KAAKhB,mBAAmB0B,UAAUC,QAAUD,UAGhD,IAAIE,QAAUZ,KAAKT,gBAAgBc,WAC/BQ,gBAAkBpC,MAAMC,YAAYoC,uBA6BxC,IA3BAd,KAAKL,UAAY,IAAIhB,QAAQoC,SAASH,QAAS,CAC3CD,OAAQ,qBACRK,KAAM,IACNC,OAAQ,kBAEJ,OAAI,MAAKtB,UAAUuB,YAAYC,SAAS,OAC7B,MAAKvB,YAAYwB,mBAEjB,MAAKzB,UAAUuB,aAG9BG,kBAAkB,EAClBC,eAAgB,EAChBC,cAAe,IACfC,cAAe,GACfC,aAAc,wBACV,MAAK7B,YAAY8B,oBAIzB1B,KAAKJ,YAAc,IAAIjB,QAAQgD,OAAO3B,KAAKT,gBAAiBqB,QAAS,CACjEgB,OAAO,EACPC,UAAU,EACVlB,OAAQ,2BACRmB,cAAc,IAGbxF,EAAI,EAAGA,EAAIsE,QAAQH,OAAQnE,IAAK,CACjC,IAAIyF,OAASvD,EAAEoC,QAAQtE,IACnB0F,QAAUD,OAAOxB,KAAK,MAGtB0B,SAA+B,iBAAZD,SAAwBA,QAAQE,MAAM,YAEzDD,UAAYA,SAAS,GAAKjC,KAAKH,iBAC/BG,KAAKH,eAAiBsC,SAASF,SAAS,KAG5C,IAAIG,MAAQ,IAAIC,YAAYrC,KAAM+B,QAE9BK,MAAMtD,KAAqD,IAA/CN,EAAE8D,QAAQ,GAAKF,MAAMtD,GAAI+B,kBACrCuB,MAAMG,WAIdvC,KAAKwC,YAAYxC,KAAKN,sBAAuB,SAAS,SAAS+C,IAC3D,IAAIC,KAAOlE,EAAEiE,GAAGE,QAAQpC,KAAK,QAC7BP,KAAK4C,SAASF,SAGlB,IAAI/D,QAAQkE,QAAQ7C,KAAKM,iBACrB,CACIwC,eAAgB,wBAAAC,QACZ,MAAKH,SAASpE,EAAEuE,QAAQxC,KAAK,YAIzCP,KAAKgD,oBAELhD,KAAKwC,YAAYxC,KAAKV,WAAY,SAAU,kBAC5CX,QAAQsE,KAAKC,MAAMlD,KAAKQ,eAAe1C,KAAKkC,OAE5CA,KAAKmD,QAAQ,cAGjB3C,eAAgB,0BAAW,iBAElBR,KAAKZ,wBACNY,KAAKZ,sBAAwBY,KAAKP,kBAAkB2D,QAE/CpD,KAAKZ,yBAMVY,KAAKX,6BAA+BW,KAAKX,0BAA4BW,KAAKR,sBAAsB4D,WAC5FpD,KAAKZ,sBAAwBY,KAAKX,0BAC7BW,KAAKb,sBACNa,KAAKP,kBAAkB4D,SAAS,UAChCrD,KAAKM,iBAAiBgD,YAAY,UAClCtD,KAAKb,qBAAsB,GAG3Ba,KAAKb,sBACLa,KAAKM,iBAAiB+C,SAAS,UAC/BrD,KAAKP,kBAAkB6D,YAAY,UACnCtD,KAAKb,qBAAsB,GAGoB,IAA3CoE,UAAUC,UAAUC,QAAQ,WAC5B9E,QAAQ+E,uBAAsB,WAC1B,OAAKjE,kBAAkBkE,IAAI,UAAW,KAEtChF,QAAQ+E,uBAAsB,WAC1B,OAAKjE,kBAAkBkE,IAAI,UAAW,aASlEC,iBAAkB,4BACd,OAAS5D,KAAKE,WAAaF,KAAKT,gBAAgBc,WAAWI,OAAST,KAAKE,WAG7E8C,kBAAmB,6BACf,IAAI1G,EAAG8F,MAEP,GAAIpC,KAAK4D,mBAIL,IAHA5D,KAAKP,kBAAkB6D,YAAY,YACnCtD,KAAKM,iBAAiBgD,YAAY,YAE7BhH,EAAI,EAAGA,EAAI0D,KAAKJ,YAAYiE,OAAOpD,OAAQnE,KAC5C8F,MAAQpC,KAAKJ,YAAYiE,OAAOC,GAAGxH,GAAGiE,KAAK,WAGvC6B,MAAM2B,YAAYC,KAAK,sBAAsBC,SAASX,YAAY,iBAO1E,IAHAtD,KAAKP,kBAAkB4D,SAAS,YAChCrD,KAAKM,iBAAiB+C,SAAS,YAE1B/G,EAAI,EAAGA,EAAI0D,KAAKJ,YAAYiE,OAAOpD,OAAQnE,KAC5C8F,MAAQpC,KAAKJ,YAAYiE,OAAOC,GAAGxH,GAAGiE,KAAK,WAGvC6B,MAAM2B,YAAYC,KAAK,sBAAsBC,SAASZ,SAAS,aAM/ET,SAAU,kBAASF,KAAMwB,cAAeC,WAAW,gBAC/C,GAAKnE,KAAK4D,mBAAV,CAIA5D,KAAKH,iBAEL,IAAIf,GAAK,MAAQkB,KAAKH,eAElBuE,KAAO,uCAAH,OACgBtF,GADhB,wBACkC4D,KADlC,4CAEW1C,KAAKf,gBAFhB,iCAEwDH,GAFxD,6CAGWkB,KAAKf,gBAHhB,oBAG2CH,GAH3C,2BAGgE4D,KAHhE,6CAIW1C,KAAKf,gBAJhB,oBAI2CH,GAJ3C,yFAMSkB,KAAKqE,qBAAqB3B,MAAM7F,KANzC,6FASa4B,MAAMjB,EAAE,MAAO,UAT5B,iFAWiBiB,MAAMjB,EAAE,MAAO,YAXhC,iEAY0BiB,MAAMjB,EAAE,MAAO,WAZzC,gJAeyCiB,MAAMjB,EAAE,MAAO,YAfxD,4FAgBoDiB,MAAMjB,EAAE,MAAO,UAhBnE,gFAiBwCiB,MAAMjB,EAAE,MAAO,WAjBvD,6FAkBqDiB,MAAMjB,EAAE,MAAO,UAlBpE,2EAmBmCiB,MAAMjB,EAAE,MAAO,WAnBlD,6EAoBqCiB,MAAMjB,EAAE,MAAO,aApBpD,0BAuBR,IAAKwC,KAAKD,SAASuE,aAAc,CAC7BF,MAAQ,iIAAJ,OAGmD3F,MAAMjB,EAAE,MAAO,UAHlE,iFAQJ,IAAK,IAAIlB,EAAI,EAAGA,EAAI0D,KAAKjB,WAAW0B,OAAQnE,IAAK,CAC7C,IAAIoE,UAAYV,KAAKjB,WAAWzC,GAChC8H,MAAQ,kEAAJ,OACuC1D,UAAUC,OADjD,aAC4DlC,MAAMjB,EAAE,MAAO,mBAAoB,CAACkF,KAAMhC,UAAU7D,OADhH,aAIRuH,MAAQ,gBAIZA,MAAQ,iDAAJ,OAEkB3F,MAAMjB,EAAE,MAAO,WAFjC,0CAMJ,IAAIuE,OAASvD,EAAE4F,MAGXG,OAAOC,aACPD,OAAOC,YAAYC,QAGnBP,cACAnC,OAAO2C,aAAaR,eAEpBnC,OAAO4C,SAAS3E,KAAKT,iBAGzB,IAAIqF,iBAAmBpG,EAAE,yBAAyBmG,SAAS5C,QACvD8C,SAAW7E,KAAK8E,mBAAmB9E,KAAKhB,mBAAmB0D,MAAMmC,SAAU/F,IAC3EiG,SAAW/E,KAAK8E,mBAAmB9E,KAAKhB,mBAAmB0D,MAAMqC,SAAUjG,IAE/EN,EAAEqG,UAAUF,SAASC,kBAErB5E,KAAKmD,QAAQ,aAAc,CACvBpB,OAAQA,SAIZA,OAAO4B,IAAI3D,KAAKgF,kBAAkBjD,SAASkD,SAAS,CAChDC,QAAS,EACT,gBAAiB,IAClB,QAAQ,WACPnD,OAAO4B,IAAI,gBAAiB,IAC5BhF,QAAQwG,KAAKC,OAAOL,UACpBtG,MAAM4G,eAAeT,kBACrB,IAAIvC,YAAY,OAAMN,QACtB,OAAKpC,UAAU2F,SAASvD,QACxB,OAAKnC,YAAY0F,SAASvD,QAC1B,OAAKiB,oBAELrE,QAAQ+E,uBAAsB,iBACD,IAAdS,WAA6BA,aAEpCxF,QAAQ4G,yBAAyBxD,QAEjCA,OAAOiC,KAAK,2BAA2BwB,QAAQrC,QAAQ,UAIvDoB,OAAOC,aACPD,OAAOC,YAAYiB,iBAMnCpB,qBAAsB,8BAAS1D,QAC3B,IAAK,IAAIrE,EAAI,EAAGA,EAAI0D,KAAKjB,WAAW0B,OAAQnE,IACxC,GAAI0D,KAAKjB,WAAWzC,GAAGqE,SAAWA,OAC9B,OAAOX,KAAKjB,WAAWzC,IAKnCoJ,uBAAwB,kCACpB1F,KAAK2F,qBAAqB,aAG9BC,qBAAsB,gCAClB5F,KAAK2F,qBAAqB,WAG9BE,sBAAuB,iCACnB7F,KAAK2F,qBAAqB,YAG9BG,qBAAsB,gCAClB9F,KAAK2F,qBAAqB,WAG9BI,qBAAsB,gCAClB/F,KAAK2F,qBAAqB,iBAG9BA,qBAAsB,8BAASK,IAC3B,IAAK,IAAI1J,EAAI,EAAGA,EAAI0D,KAAKJ,YAAYqG,eAAexF,OAAQnE,IACxD0D,KAAKJ,YAAYqG,eAAenC,GAAGxH,GAAGiE,KAAK,SAASyF,OAI5DhB,kBAAmB,2BAASjD,QACxB,MAAO,CACHmD,QAAS,EACTgB,cAAgBnE,OAAOoE,gBAI/BrB,mBAAoB,4BAASV,KAAMtF,IAC/B,MAAoB,iBAATsF,KACAA,KAAKgC,QAAQ,IAAIC,OAAJ,kBAAsBrG,KAAKD,SAASuG,eAApC,MAAwD,KAAMxH,IAE3E,IAIf,gBACI,OAAOkB,KAAKD,SAASG,YAE1B,CACCE,SAAU,CACNkG,eAAgB,KAChBpG,UAAW,KACXoE,cAAc,GAGlBiC,yBAA0B,SAAW9H,MAAM+H,UAAY,+BAEvD1F,qBAAsB,gCAClB,MAAwE,iBAA7D2F,aAAahI,MAAMC,YAAY6H,0BAC/B9H,MAAMiI,YAAYD,aAAahI,MAAMC,YAAY6H,0BAA0BI,MAAM,MAEjF,IAIfC,qBAAsB,8BAASC,KAC3BJ,aAAahI,MAAMC,YAAY6H,0BAA4BM,IAAIC,KAAK,MAGxEC,yBAA0B,kCAASjI,IAC/B,GAAuB,oBAAZkI,QAAyB,CAChC,IAAInG,gBAAkBpC,MAAMC,YAAYoC,wBAEK,IAAzCtC,EAAE8D,QAAQ,GAAKxD,GAAI+B,mBACnBA,gBAAgBoG,KAAKnI,IACrBL,MAAMC,YAAYkI,qBAAqB/F,oBAKnDqG,uBAAwB,gCAASpI,IAC7B,GAAuB,oBAAZkI,QAAyB,CAChC,IAAInG,gBAAkBpC,MAAMC,YAAYoC,uBACpCqG,qBAAuB3I,EAAE8D,QAAQ,GAAKxD,GAAI+B,kBAEhB,IAA1BsG,uBACAtG,gBAAgBuG,OAAOD,qBAAsB,GAC7C1I,MAAMC,YAAYkI,qBAAqB/F,sBAMvD,IAAIwB,YAAc1D,QAAQC,KAAKC,OAAO,CAClCwI,OAAQ,KACR/H,WAAY,KACZgI,UAAW,KACX1C,iBAAkB,KAClB2C,kBAAmB,KACnBxD,YAAa,KACbyD,gBAAiB,KAEjBC,MAAO,KACP3I,GAAI,KAEJ4I,WAAW,EAEX5H,KAAM,cAASuH,OAAQ/H,YAAY,gBAC/BU,KAAKqH,OAASA,OACdrH,KAAKV,WAAaA,WAClBU,KAAKsH,UAAYhI,WAAWe,SAAS,aACrCL,KAAKuH,kBAAoBvH,KAAKsH,UAAUjH,SAAS,YACjDL,KAAK4E,iBAAmBtF,WAAWe,SAAS,WAE5CL,KAAKV,WAAWiB,KAAK,QAASP,MAE9BA,KAAKlB,GAAKkB,KAAKV,WAAWiB,KAAK,MAC/BP,KAAKyH,OAAUzH,KAAKlB,IAA0B,iBAAZkB,KAAKlB,IAA4C,QAAzBkB,KAAKlB,GAAG6I,OAAO,EAAG,GAE5E,IAAIC,SAAW5H,KAAKV,WAAW0E,KAAK,0BAChC6D,QAAU,IAAIlJ,QAAQkE,QAAQ+E,UAElC5H,KAAK+D,YAAc8D,QAAQC,KAAKxI,WAEhCuI,QAAQC,KAAK/H,SAAS+C,eAAiB9C,KAAK+H,mBAAmBjK,KAAKkC,MAEpE6H,QAAQC,KAAKE,GAAG,QAAQ,WACpB,OAAK1I,WAAW+D,SAAS,UACrB,OAAK/D,WAAW2I,KAAK,gBAAgBxH,OACrC,OAAKsD,YAAYC,KAAK,+BAA+BC,SAASX,YAAY,UAE1E,OAAKS,YAAYC,KAAK,+BAA+BC,SAASZ,SAAS,UAEvE,OAAK/D,WAAW4I,KAAK,gBAAgBzH,OACrC,OAAKsD,YAAYC,KAAK,iCAAiCC,SAASX,YAAY,UAE5E,OAAKS,YAAYC,KAAK,iCAAiCC,SAASZ,SAAS,aAGjFwE,QAAQC,KAAKE,GAAG,QAAQ,WACpB,OAAK1I,WAAWgE,YAAY,aAI5B3E,QAAQwJ,QAAQnI,KAAKV,WAAY,mBACjCU,KAAKuC,WAGTvC,KAAKoI,qBAAuB,SAAS3F,IACjCA,GAAG4F,iBACHrI,KAAKsI,UAGTtI,KAAKwC,YAAYxC,KAAKsH,UAAW,YAAatH,KAAKoI,uBAGvDE,OAAQ,kBACAtI,KAAK0H,UACL1H,KAAKuI,SAELvI,KAAKuC,UAAS,IAItBA,SAAU,kBAASiG,SAAS,gBACxB,IAAIxI,KAAK0H,UAAT,CAIA1H,KAAKV,WAAW+D,SAAS,aAKzB,IAHA,IAAIoF,YAAc,GACdC,QAAU1I,KAAK4E,iBAAiBvE,WAAWA,WAEtC/D,EAAI,EAAGA,EAAIoM,QAAQjI,OAAQnE,IAAK,CAKrC,IAJA,IAAIqM,OACAC,QADSpK,EAAEkK,QAAQpM,IACF+D,SAAS,UAAU2D,KAAK,gDACzC6E,iBAAmB,GAEdC,EAAI,EAAGA,EAAIF,QAAQnI,OAAQqI,IAAK,CACrC,IAAIC,OAASvK,EAAEoK,QAAQE,IACnBvL,MAEJ,GAAIwL,OAAO5H,SAAS,SAAU,CAC1B,IAAI6H,2BAA6BD,OAAO9E,SAASA,SAEjD,GAAI+E,2BAA2B7H,SAAS,iBACnC6H,2BAA2B7H,SAAS,OAAS4H,OAAO5H,SAAS,SAC5D6H,2BAA2B7H,SAAS,OAAS4H,OAAO5H,SAAS,OAE/D,SAGJ5D,MAAQwL,OAAOE,YAEf1L,MAAQkB,MAAMyK,QAAQvK,QAAQwK,gBAAgBJ,SAG9CxL,iBAAiB6L,QACjB7L,MAAQA,MAAMuJ,KAAK,OAGnBvJ,QACAA,MAAQkB,MAAM4K,KAAK9L,UAGXsL,mBACAA,kBAAoB,MAGxBA,kBAAoBtL,OAK5BsL,mBACAJ,cAAgBA,YAAc,mBAAqB,IAAMI,kBAIjE7I,KAAKuH,kBAAkBnD,KAAKqE,aAE5BzI,KAAK4E,iBAAiBK,SAAS,QAC/BjF,KAAKV,WAAW2F,SAAS,QAErBuD,SACAxI,KAAK4E,iBAAiBK,SAAS,UAAW,CAACqE,SAAU,SACrDtJ,KAAKV,WAAW2F,SAAS,CAACsE,OAAQ,IAAK,UAEvCvJ,KAAKuH,kBAAkBiC,OACvBxJ,KAAK4E,iBAAiB6E,OACtBzJ,KAAKV,WAAWqE,IAAI,CAAC4F,OAAQ,MAGjCG,YAAW,WACP,OAAK3F,YAAYC,KAAK,iCAAiCC,SAASZ,SAAS,UACzE,OAAKU,YAAYC,KAAK,+BAA+BC,SAASX,YAAY,YAC3E,KAGEtD,KAAKyH,MAGDzH,KAAKwH,gBAGNxH,KAAKwH,gBAAgBmC,IAAI,KAFzB3J,KAAKwH,gBAAkBhJ,EAAE,8BAAgCwB,KAAKqH,OAAOpI,gBAAkB,YAAce,KAAKlB,GAAK,6BAA6B6F,SAAS3E,KAAKV,YAH9Jb,MAAMC,YAAYqI,yBAAyB/G,KAAKlB,IASpDkB,KAAK0H,WAAY,IAGrBa,OAAQ,kBAAW,gBACf,GAAKvI,KAAK0H,UAAV,CAIA1H,KAAKV,WAAWgE,YAAY,aAE5BtD,KAAK4E,iBAAiBK,SAAS,QAC/BjF,KAAKV,WAAW2F,SAAS,QAEzB,IAAI2E,yBAA2B5J,KAAKV,WAAWiK,SAC/CvJ,KAAKV,WAAWiK,OAAO,QACvBvJ,KAAK4E,iBAAiB4E,OACtB,IAAIK,wBAA0B7J,KAAKV,WAAWiK,SAC1CO,aAAe9J,KAAK4E,iBAAiBjB,IAAI,YAAc,QAc3D,GAbA3D,KAAKV,WAAWiK,OAAOK,0BACvB5J,KAAK4E,iBAAiB6E,OAAOxE,SAAS,SAAU,CAACqE,SAAU,OAAQS,QAASD,eAC5E9J,KAAKV,WAAW2F,SAAS,CAACsE,OAAQM,yBAA0B,QAAQ,WAChE,OAAKtC,kBAAkBnD,KAAK,IAC5B,OAAK9E,WAAWiK,OAAO,WAG3BG,YAAW,WACP,OAAK3F,YAAYC,KAAK,iCAAiCC,SAASX,YAAY,UAC5E,OAAKS,YAAYC,KAAK,+BAA+BC,SAASZ,SAAS,YACxE,MAGErD,KAAKyH,OAA4B,oBAAZT,QAAyB,CAC/C,IAAInG,gBAAkBpC,MAAMC,YAAYoC,uBACpCqG,qBAAuB3I,EAAE8D,QAAQ,GAAKtC,KAAKlB,GAAI+B,kBAErB,IAA1BsG,uBACAtG,gBAAgBuG,OAAOD,qBAAsB,GAC7C1I,MAAMC,YAAYkI,qBAAqB/F,kBAI1Cb,KAAKyH,MAECzH,KAAKwH,iBACZxH,KAAKwH,gBAAgBmC,IAAI,IAFzBlL,MAAMC,YAAYwI,uBAAuBlH,KAAKlB,IAKlDkB,KAAK0H,WAAY,IAGrBsC,QAAS,mBAAW,gBAChBhK,KAAKV,WAAWe,SAAS,kCAAkCsJ,IAAI,IAC/D3J,KAAKV,WAAW+D,SAAS,YAEzBqG,YAAW,WACP,OAAK3F,YAAYC,KAAK,gCAAgCC,SAASZ,SAAS,UACxE,OAAKU,YAAYC,KAAK,+BAA+BC,SAASX,YAAY,YAC3E,KAEHtD,KAAKuC,UAAS,IAGlB0H,OAAQ,kBAAW,gBACfjK,KAAKV,WAAWe,SAAS,kCAAkCsJ,IAAI,KAC/D3J,KAAKV,WAAWgE,YAAY,YAE5BoG,YAAW,WACP,OAAK3F,YAAYC,KAAK,gCAAgCC,SAASX,YAAY,UAC3E,OAAKS,YAAYC,KAAK,+BAA+BC,SAASZ,SAAS,YACxE,MAGP6G,OAAQ,kBACJ,IAAIC,MAAQnK,KAAKV,WAAW2I,KAAK,gBAC7BkC,MAAM1J,SACNT,KAAKV,WAAWoF,aAAayF,OAC7BnK,KAAKqH,OAAOzH,YAAY8B,mBAIhC0I,SAAU,oBACN,IAAIC,MAAQrK,KAAKV,WAAW4I,KAAK,gBAC7BmC,MAAM5J,SACNT,KAAKV,WAAWgL,YAAYD,OAC5BrK,KAAKqH,OAAOzH,YAAY8B,mBAIhCqG,mBAAoB,4BAAShF,QACzB,IAAIwH,YAAevK,KAAKqH,OAAOzH,YAAY4K,cAAgB,GAAKxK,KAAKqH,OAAOzH,YAAY6K,WAAWzK,KAAKV,YACpGoL,QAAUlM,EAAEuE,QAEhB,OAAQ2H,QAAQnK,KAAK,WACjB,IAAK,WACGgK,YACAvK,KAAKqH,OAAO3B,yBAEZ1F,KAAKuC,UAAS,GAGlB,MAGJ,IAAK,SACGgI,YACAvK,KAAKqH,OAAOzB,uBAEZ5F,KAAKuI,SAGT,MAGJ,IAAK,UACGgC,YACAvK,KAAKqH,OAAOxB,wBAEZ7F,KAAKgK,UAGT,MAGJ,IAAK,SACGO,YACAvK,KAAKqH,OAAOvB,wBAEZ9F,KAAKiK,SACLjK,KAAKuI,UAGT,MAGJ,IAAK,SACDvI,KAAKkK,SACL,MAGJ,IAAK,WACDlK,KAAKoK,WACL,MAGJ,IAAK,MACD,IAAI1H,KAAOgI,QAAQnK,KAAK,QACxBP,KAAKqH,OAAOzE,SAASF,KAAM1C,KAAKV,YAChC,MAGJ,IAAK,SACGiL,YACII,QAAQlM,MAAMjB,EAAE,MAAO,0DACvBwC,KAAKqH,OAAOtB,uBAGhB/F,KAAK4K,iBAQrBA,aAAc,wBAAW,gBAEjBrG,OAAOC,aACPD,OAAOC,YAAYC,QAGvBzE,KAAKV,WAAW2F,SAASjF,KAAKqH,OAAOrC,kBAAkBhF,KAAKV,YAAa,QAAQ,WAC7E,OAAKA,WAAWuL,SAChB,OAAKxD,OAAOrE,oBAGRuB,OAAOC,aACPD,OAAOC,YAAYiB,SAGvB,OAAK4B,OAAOlE,QAAQ,eAAgB,CAChCpB,OAAQ,OAAKzC,mBAruBjC,CA0uBGwL","file":"MatrixInput.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","(function($) {\n    /** global: Craft */\n    /** global: Garnish */\n    /**\n     * Matrix input class\n     */\n    Craft.MatrixInput = Garnish.Base.extend({\n        id: null,\n        blockTypes: null,\n        blockTypesByHandle: null,\n        inputNamePrefix: null,\n        inputIdPrefix: null,\n\n        showingAddBlockMenu: false,\n        addBlockBtnGroupWidth: null,\n        addBlockBtnContainerWidth: null,\n\n        $container: null,\n        $blockContainer: null,\n        $addBlockBtnContainer: null,\n        $addBlockBtnGroup: null,\n        $addBlockBtnGroupBtns: null,\n\n        blockSort: null,\n        blockSelect: null,\n        totalNewBlocks: 0,\n\n        init: function(id, blockTypes, inputNamePrefix, settings) {\n            this.id = id;\n            this.blockTypes = blockTypes;\n            this.inputNamePrefix = inputNamePrefix;\n            this.inputIdPrefix = Craft.formatInputId(this.inputNamePrefix);\n\n            // see if settings was actually set to the maxBlocks value\n            if (typeof settings === 'number') {\n                settings = {maxBlocks: settings};\n            }\n            this.setSettings(settings, Craft.MatrixInput.defaults);\n\n            this.$container = $('#' + this.id);\n            this.$blockContainer = this.$container.children('.blocks');\n            this.$addBlockBtnContainer = this.$container.children('.buttons');\n            this.$addBlockBtnGroup = this.$addBlockBtnContainer.children('.btngroup');\n            this.$addBlockBtnGroupBtns = this.$addBlockBtnGroup.children('.btn');\n            this.$addBlockMenuBtn = this.$addBlockBtnContainer.children('.menubtn');\n\n            this.$container.data('matrix', this);\n\n            this.setNewBlockBtn();\n\n            this.blockTypesByHandle = {};\n\n            var i;\n\n            for (i = 0; i < this.blockTypes.length; i++) {\n                var blockType = this.blockTypes[i];\n                this.blockTypesByHandle[blockType.handle] = blockType;\n            }\n\n            var $blocks = this.$blockContainer.children(),\n                collapsedBlocks = Craft.MatrixInput.getCollapsedBlockIds();\n\n            this.blockSort = new Garnish.DragSort($blocks, {\n                handle: '> .actions > .move',\n                axis: 'y',\n                filter: () => {\n                    // Only return all the selected items if the target item is selected\n                    if (this.blockSort.$targetItem.hasClass('sel')) {\n                        return this.blockSelect.getSelectedItems();\n                    } else {\n                        return this.blockSort.$targetItem;\n                    }\n                },\n                collapseDraggees: true,\n                magnetStrength: 4,\n                helperLagBase: 1.5,\n                helperOpacity: 0.9,\n                onSortChange: () => {\n                    this.blockSelect.resetItemOrder();\n                },\n            });\n\n            this.blockSelect = new Garnish.Select(this.$blockContainer, $blocks, {\n                multi: true,\n                vertical: true,\n                handle: '> .checkbox, > .titlebar',\n                checkboxMode: true\n            });\n\n            for (i = 0; i < $blocks.length; i++) {\n                var $block = $($blocks[i]),\n                    blockId = $block.data('id');\n\n                // Is this a new block?\n                var newMatch = (typeof blockId === 'string' && blockId.match(/new(\\d+)/));\n\n                if (newMatch && newMatch[1] > this.totalNewBlocks) {\n                    this.totalNewBlocks = parseInt(newMatch[1]);\n                }\n\n                var block = new MatrixBlock(this, $block);\n\n                if (block.id && $.inArray('' + block.id, collapsedBlocks) !== -1) {\n                    block.collapse();\n                }\n            }\n\n            this.addListener(this.$addBlockBtnGroupBtns, 'click', function(ev) {\n                var type = $(ev.target).data('type');\n                this.addBlock(type);\n            });\n\n            new Garnish.MenuBtn(this.$addBlockMenuBtn,\n                {\n                    onOptionSelect: option => {\n                        this.addBlock($(option).data('type'));\n                    },\n                });\n\n            this.updateAddBlockBtn();\n\n            this.addListener(this.$container, 'resize', 'setNewBlockBtn');\n            Garnish.$doc.ready(this.setNewBlockBtn.bind(this));\n\n            this.trigger('afterInit');\n        },\n\n        setNewBlockBtn: function() {\n            // Do we know what the button group width is yet?\n            if (!this.addBlockBtnGroupWidth) {\n                this.addBlockBtnGroupWidth = this.$addBlockBtnGroup.width();\n\n                if (!this.addBlockBtnGroupWidth) {\n                    return;\n                }\n            }\n\n            // Only check if the container width has resized\n            if (this.addBlockBtnContainerWidth !== (this.addBlockBtnContainerWidth = this.$addBlockBtnContainer.width())) {\n                if (this.addBlockBtnGroupWidth > this.addBlockBtnContainerWidth) {\n                    if (!this.showingAddBlockMenu) {\n                        this.$addBlockBtnGroup.addClass('hidden');\n                        this.$addBlockMenuBtn.removeClass('hidden');\n                        this.showingAddBlockMenu = true;\n                    }\n                } else {\n                    if (this.showingAddBlockMenu) {\n                        this.$addBlockMenuBtn.addClass('hidden');\n                        this.$addBlockBtnGroup.removeClass('hidden');\n                        this.showingAddBlockMenu = false;\n\n                        // Because Safari is awesome\n                        if (navigator.userAgent.indexOf('Safari') !== -1) {\n                            Garnish.requestAnimationFrame(() => {\n                                this.$addBlockBtnGroup.css('opacity', 0.99);\n\n                                Garnish.requestAnimationFrame(() => {\n                                    this.$addBlockBtnGroup.css('opacity', '');\n                                });\n                            });\n                        }\n                    }\n                }\n            }\n        },\n\n        canAddMoreBlocks: function() {\n            return (!this.maxBlocks || this.$blockContainer.children().length < this.maxBlocks);\n        },\n\n        updateAddBlockBtn: function() {\n            var i, block;\n\n            if (this.canAddMoreBlocks()) {\n                this.$addBlockBtnGroup.removeClass('disabled');\n                this.$addBlockMenuBtn.removeClass('disabled');\n\n                for (i = 0; i < this.blockSelect.$items.length; i++) {\n                    block = this.blockSelect.$items.eq(i).data('block');\n\n                    if (block) {\n                        block.$actionMenu.find('a[data-action=add]').parent().removeClass('disabled');\n                    }\n                }\n            } else {\n                this.$addBlockBtnGroup.addClass('disabled');\n                this.$addBlockMenuBtn.addClass('disabled');\n\n                for (i = 0; i < this.blockSelect.$items.length; i++) {\n                    block = this.blockSelect.$items.eq(i).data('block');\n\n                    if (block) {\n                        block.$actionMenu.find('a[data-action=add]').parent().addClass('disabled');\n                    }\n                }\n            }\n        },\n\n        addBlock: function(type, $insertBefore, autofocus) {\n            if (!this.canAddMoreBlocks()) {\n                return;\n            }\n\n            this.totalNewBlocks++;\n\n            var id = 'new' + this.totalNewBlocks;\n\n            var html = `\n<div class=\"matrixblock\" data-id=\"${id}\" data-type=\"${type}\">\n  <input type=\"hidden\" name=\"${this.inputNamePrefix}[sortOrder][]\" value=\"${id}\"/>\n  <input type=\"hidden\" name=\"${this.inputNamePrefix}[blocks][${id}][type]\" value=\"${type}\"/>\n  <input type=\"hidden\" name=\"${this.inputNamePrefix}[blocks][${id}][enabled]\" value=\"1\"/>\n  <div class=\"titlebar\">\n    <div class=\"blocktype\">${this.getBlockTypeByHandle(type).name}</div>\n    <div class=\"preview\"></div>\n  </div>\n  <div class=\"checkbox\" title=\"${Craft.t('app', 'Select')}\"></div>\n  <div class=\"actions\">\n    <div class=\"status off\" title=\"${Craft.t('app', 'Disabled')}\"></div>\n    <a class=\"settings icon menubtn\" title=\"${Craft.t('app', 'Actions')}\" role=\"button\"></a> \n    <div class=\"menu\">\n      <ul class=\"padded\">\n        <li><a data-icon=\"collapse\" data-action=\"collapse\">${Craft.t('app', 'Collapse')}</a></li>\n        <li class=\"hidden\"><a data-icon=\"expand\" data-action=\"expand\">${Craft.t('app', 'Expand')}</a></li>\n        <li><a data-icon=\"disabled\" data-action=\"disable\">${Craft.t('app', 'Disable')}</a></li>\n        <li class=\"hidden\"><a data-icon=\"enabled\" data-action=\"enable\">${Craft.t('app', 'Enable')}</a></li>\n        <li><a data-icon=\"uarr\" data-action=\"moveUp\">${Craft.t('app', 'Move up')}</a></li>\n        <li><a data-icon=\"darr\" data-action=\"moveDown\">${Craft.t('app', 'Move down')}</a></li>\n      </ul>`;\n\n            if (!this.settings.staticBlocks) {\n                html += `\n      <hr class=\"padded\"/>\n      <ul class=\"padded\">\n        <li><a class=\"error\" data-icon=\"remove\" data-action=\"delete\">${Craft.t('app', 'Delete')}</a></li>\n      </ul>\n      <hr class=\"padded\"/>\n      <ul class=\"padded\">`;\n\n                for (var i = 0; i < this.blockTypes.length; i++) {\n                    var blockType = this.blockTypes[i];\n                    html += `\n        <li><a data-icon=\"plus\" data-action=\"add\" data-type=\"${blockType.handle}\">${Craft.t('app', 'Add {type} above', {type: blockType.name})}</a></li>`;\n                }\n\n                html += `\n      </ul>`\n            }\n\n            html += `\n    </div>\n    <a class=\"move icon\" title=\"${Craft.t('app', 'Reorder')}\" role=\"button\"></a>\n  </div>\n</div>`;\n\n            var $block = $(html);\n\n            // Pause the draft editor\n            if (window.draftEditor) {\n                window.draftEditor.pause();\n            }\n\n            if ($insertBefore) {\n                $block.insertBefore($insertBefore);\n            } else {\n                $block.appendTo(this.$blockContainer);\n            }\n\n            var $fieldsContainer = $('<div class=\"fields\"/>').appendTo($block),\n                bodyHtml = this.getParsedBlockHtml(this.blockTypesByHandle[type].bodyHtml, id),\n                footHtml = this.getParsedBlockHtml(this.blockTypesByHandle[type].footHtml, id);\n\n            $(bodyHtml).appendTo($fieldsContainer);\n\n            this.trigger('blockAdded', {\n                $block: $block\n            });\n\n            // Animate the block into position\n            $block.css(this.getHiddenBlockCss($block)).velocity({\n                opacity: 1,\n                'margin-bottom': 10\n            }, 'fast', () => {\n                $block.css('margin-bottom', '');\n                Garnish.$bod.append(footHtml);\n                Craft.initUiElements($fieldsContainer);\n                new MatrixBlock(this, $block);\n                this.blockSort.addItems($block);\n                this.blockSelect.addItems($block);\n                this.updateAddBlockBtn();\n\n                Garnish.requestAnimationFrame(function() {\n                    if (typeof autofocus === 'undefined' || autofocus) {\n                        // Scroll to the block\n                        Garnish.scrollContainerToElement($block);\n                        // Focus on the first text input\n                        $block.find('.text,[contenteditable]').first().trigger('focus');\n                    }\n\n                    // Resume the draft editor\n                    if (window.draftEditor) {\n                        window.draftEditor.resume();\n                    }\n                });\n            });\n        },\n\n        getBlockTypeByHandle: function(handle) {\n            for (var i = 0; i < this.blockTypes.length; i++) {\n                if (this.blockTypes[i].handle === handle) {\n                    return this.blockTypes[i];\n                }\n            }\n        },\n\n        collapseSelectedBlocks: function() {\n            this.callOnSelectedBlocks('collapse');\n        },\n\n        expandSelectedBlocks: function() {\n            this.callOnSelectedBlocks('expand');\n        },\n\n        disableSelectedBlocks: function() {\n            this.callOnSelectedBlocks('disable');\n        },\n\n        enableSelectedBlocks: function() {\n            this.callOnSelectedBlocks('enable');\n        },\n\n        deleteSelectedBlocks: function() {\n            this.callOnSelectedBlocks('selfDestruct');\n        },\n\n        callOnSelectedBlocks: function(fn) {\n            for (var i = 0; i < this.blockSelect.$selectedItems.length; i++) {\n                this.blockSelect.$selectedItems.eq(i).data('block')[fn]();\n            }\n        },\n\n        getHiddenBlockCss: function($block) {\n            return {\n                opacity: 0,\n                marginBottom: -($block.outerHeight())\n            };\n        },\n\n        getParsedBlockHtml: function(html, id) {\n            if (typeof html === 'string') {\n                return html.replace(new RegExp(`__BLOCK_${this.settings.placeholderKey}__`, 'g'), id);\n            } else {\n                return '';\n            }\n        },\n\n        get maxBlocks() {\n            return this.settings.maxBlocks;\n        },\n    }, {\n        defaults: {\n            placeholderKey: null,\n            maxBlocks: null,\n            staticBlocks: false,\n        },\n\n        collapsedBlockStorageKey: 'Craft-' + Craft.systemUid + '.MatrixInput.collapsedBlocks',\n\n        getCollapsedBlockIds: function() {\n            if (typeof localStorage[Craft.MatrixInput.collapsedBlockStorageKey] === 'string') {\n                return Craft.filterArray(localStorage[Craft.MatrixInput.collapsedBlockStorageKey].split(','));\n            } else {\n                return [];\n            }\n        },\n\n        setCollapsedBlockIds: function(ids) {\n            localStorage[Craft.MatrixInput.collapsedBlockStorageKey] = ids.join(',');\n        },\n\n        rememberCollapsedBlockId: function(id) {\n            if (typeof Storage !== 'undefined') {\n                var collapsedBlocks = Craft.MatrixInput.getCollapsedBlockIds();\n\n                if ($.inArray('' + id, collapsedBlocks) === -1) {\n                    collapsedBlocks.push(id);\n                    Craft.MatrixInput.setCollapsedBlockIds(collapsedBlocks);\n                }\n            }\n        },\n\n        forgetCollapsedBlockId: function(id) {\n            if (typeof Storage !== 'undefined') {\n                var collapsedBlocks = Craft.MatrixInput.getCollapsedBlockIds(),\n                    collapsedBlocksIndex = $.inArray('' + id, collapsedBlocks);\n\n                if (collapsedBlocksIndex !== -1) {\n                    collapsedBlocks.splice(collapsedBlocksIndex, 1);\n                    Craft.MatrixInput.setCollapsedBlockIds(collapsedBlocks);\n                }\n            }\n        }\n    });\n\n    var MatrixBlock = Garnish.Base.extend({\n        matrix: null,\n        $container: null,\n        $titlebar: null,\n        $fieldsContainer: null,\n        $previewContainer: null,\n        $actionMenu: null,\n        $collapsedInput: null,\n\n        isNew: null,\n        id: null,\n\n        collapsed: false,\n\n        init: function(matrix, $container) {\n            this.matrix = matrix;\n            this.$container = $container;\n            this.$titlebar = $container.children('.titlebar');\n            this.$previewContainer = this.$titlebar.children('.preview');\n            this.$fieldsContainer = $container.children('.fields');\n\n            this.$container.data('block', this);\n\n            this.id = this.$container.data('id');\n            this.isNew = (!this.id || (typeof this.id === 'string' && this.id.substr(0, 3) === 'new'));\n\n            var $menuBtn = this.$container.find('> .actions > .settings'),\n                menuBtn = new Garnish.MenuBtn($menuBtn);\n\n            this.$actionMenu = menuBtn.menu.$container;\n\n            menuBtn.menu.settings.onOptionSelect = this.onMenuOptionSelect.bind(this);\n\n            menuBtn.menu.on('show', () => {\n                this.$container.addClass('active');\n                if (this.$container.prev('.matrixblock').length) {\n                    this.$actionMenu.find('a[data-action=moveUp]:first').parent().removeClass('hidden');\n                } else {\n                    this.$actionMenu.find('a[data-action=moveUp]:first').parent().addClass('hidden');\n                }\n                if (this.$container.next('.matrixblock').length) {\n                    this.$actionMenu.find('a[data-action=moveDown]:first').parent().removeClass('hidden');\n                } else {\n                    this.$actionMenu.find('a[data-action=moveDown]:first').parent().addClass('hidden');\n                }\n            });\n            menuBtn.menu.on('hide', () => {\n                this.$container.removeClass('active');\n            });\n\n            // Was this block already collapsed?\n            if (Garnish.hasAttr(this.$container, 'data-collapsed')) {\n                this.collapse();\n            }\n\n            this._handleTitleBarClick = function(ev) {\n                ev.preventDefault();\n                this.toggle();\n            };\n\n            this.addListener(this.$titlebar, 'doubletap', this._handleTitleBarClick);\n        },\n\n        toggle: function() {\n            if (this.collapsed) {\n                this.expand();\n            } else {\n                this.collapse(true);\n            }\n        },\n\n        collapse: function(animate) {\n            if (this.collapsed) {\n                return;\n            }\n\n            this.$container.addClass('collapsed');\n\n            var previewHtml = '',\n                $fields = this.$fieldsContainer.children().children();\n\n            for (var i = 0; i < $fields.length; i++) {\n                var $field = $($fields[i]),\n                    $inputs = $field.children('.input').find('select,input[type!=\"hidden\"],textarea,.label'),\n                    inputPreviewText = '';\n\n                for (var j = 0; j < $inputs.length; j++) {\n                    var $input = $($inputs[j]),\n                        value;\n\n                    if ($input.hasClass('label')) {\n                        var $maybeLightswitchContainer = $input.parent().parent();\n\n                        if ($maybeLightswitchContainer.hasClass('lightswitch') && (\n                            ($maybeLightswitchContainer.hasClass('on') && $input.hasClass('off')) ||\n                            (!$maybeLightswitchContainer.hasClass('on') && $input.hasClass('on'))\n                        )) {\n                            continue;\n                        }\n\n                        value = $input.text();\n                    } else {\n                        value = Craft.getText(Garnish.getInputPostVal($input));\n                    }\n\n                    if (value instanceof Array) {\n                        value = value.join(', ');\n                    }\n\n                    if (value) {\n                        value = Craft.trim(value);\n\n                        if (value) {\n                            if (inputPreviewText) {\n                                inputPreviewText += ', ';\n                            }\n\n                            inputPreviewText += value;\n                        }\n                    }\n                }\n\n                if (inputPreviewText) {\n                    previewHtml += (previewHtml ? ' <span>|</span> ' : '') + inputPreviewText;\n                }\n            }\n\n            this.$previewContainer.html(previewHtml);\n\n            this.$fieldsContainer.velocity('stop');\n            this.$container.velocity('stop');\n\n            if (animate) {\n                this.$fieldsContainer.velocity('fadeOut', {duration: 'fast'});\n                this.$container.velocity({height: 16}, 'fast');\n            } else {\n                this.$previewContainer.show();\n                this.$fieldsContainer.hide();\n                this.$container.css({height: 16});\n            }\n\n            setTimeout(() => {\n                this.$actionMenu.find('a[data-action=collapse]:first').parent().addClass('hidden');\n                this.$actionMenu.find('a[data-action=expand]:first').parent().removeClass('hidden');\n            }, 200);\n\n            // Remember that?\n            if (!this.isNew) {\n                Craft.MatrixInput.rememberCollapsedBlockId(this.id);\n            } else {\n                if (!this.$collapsedInput) {\n                    this.$collapsedInput = $('<input type=\"hidden\" name=\"' + this.matrix.inputNamePrefix + '[blocks][' + this.id + '][collapsed]\" value=\"1\"/>').appendTo(this.$container);\n                } else {\n                    this.$collapsedInput.val('1');\n                }\n            }\n\n            this.collapsed = true;\n        },\n\n        expand: function() {\n            if (!this.collapsed) {\n                return;\n            }\n\n            this.$container.removeClass('collapsed');\n\n            this.$fieldsContainer.velocity('stop');\n            this.$container.velocity('stop');\n\n            var collapsedContainerHeight = this.$container.height();\n            this.$container.height('auto');\n            this.$fieldsContainer.show();\n            var expandedContainerHeight = this.$container.height();\n            var displayValue = this.$fieldsContainer.css('display') || 'block';\n            this.$container.height(collapsedContainerHeight);\n            this.$fieldsContainer.hide().velocity('fadeIn', {duration: 'fast', display: displayValue});\n            this.$container.velocity({height: expandedContainerHeight}, 'fast', () => {\n                this.$previewContainer.html('');\n                this.$container.height('auto');\n            });\n\n            setTimeout(() => {\n                this.$actionMenu.find('a[data-action=collapse]:first').parent().removeClass('hidden');\n                this.$actionMenu.find('a[data-action=expand]:first').parent().addClass('hidden');\n            }, 200);\n\n            // Remember that?\n            if (!this.isNew && typeof Storage !== 'undefined') {\n                var collapsedBlocks = Craft.MatrixInput.getCollapsedBlockIds(),\n                    collapsedBlocksIndex = $.inArray('' + this.id, collapsedBlocks);\n\n                if (collapsedBlocksIndex !== -1) {\n                    collapsedBlocks.splice(collapsedBlocksIndex, 1);\n                    Craft.MatrixInput.setCollapsedBlockIds(collapsedBlocks);\n                }\n            }\n\n            if (!this.isNew) {\n                Craft.MatrixInput.forgetCollapsedBlockId(this.id);\n            } else if (this.$collapsedInput) {\n                this.$collapsedInput.val('');\n            }\n\n            this.collapsed = false;\n        },\n\n        disable: function() {\n            this.$container.children('input[name$=\"[enabled]\"]:first').val('');\n            this.$container.addClass('disabled');\n\n            setTimeout(() => {\n                this.$actionMenu.find('a[data-action=disable]:first').parent().addClass('hidden');\n                this.$actionMenu.find('a[data-action=enable]:first').parent().removeClass('hidden');\n            }, 200);\n\n            this.collapse(true);\n        },\n\n        enable: function() {\n            this.$container.children('input[name$=\"[enabled]\"]:first').val('1');\n            this.$container.removeClass('disabled');\n\n            setTimeout(() => {\n                this.$actionMenu.find('a[data-action=disable]:first').parent().removeClass('hidden');\n                this.$actionMenu.find('a[data-action=enable]:first').parent().addClass('hidden');\n            }, 200);\n        },\n\n        moveUp: function() {\n            let $prev = this.$container.prev('.matrixblock');\n            if ($prev.length) {\n                this.$container.insertBefore($prev);\n                this.matrix.blockSelect.resetItemOrder();\n            }\n        },\n\n        moveDown: function() {\n            let $next = this.$container.next('.matrixblock');\n            if ($next.length) {\n                this.$container.insertAfter($next);\n                this.matrix.blockSelect.resetItemOrder();\n            }\n        },\n\n        onMenuOptionSelect: function(option) {\n            var batchAction = (this.matrix.blockSelect.totalSelected > 1 && this.matrix.blockSelect.isSelected(this.$container)),\n                $option = $(option);\n\n            switch ($option.data('action')) {\n                case 'collapse': {\n                    if (batchAction) {\n                        this.matrix.collapseSelectedBlocks();\n                    } else {\n                        this.collapse(true);\n                    }\n\n                    break;\n                }\n\n                case 'expand': {\n                    if (batchAction) {\n                        this.matrix.expandSelectedBlocks();\n                    } else {\n                        this.expand();\n                    }\n\n                    break;\n                }\n\n                case 'disable': {\n                    if (batchAction) {\n                        this.matrix.disableSelectedBlocks();\n                    } else {\n                        this.disable();\n                    }\n\n                    break;\n                }\n\n                case 'enable': {\n                    if (batchAction) {\n                        this.matrix.enableSelectedBlocks();\n                    } else {\n                        this.enable();\n                        this.expand();\n                    }\n\n                    break;\n                }\n\n                case 'moveUp': {\n                    this.moveUp();\n                    break;\n                }\n\n                case 'moveDown': {\n                    this.moveDown();\n                    break;\n                }\n\n                case 'add': {\n                    var type = $option.data('type');\n                    this.matrix.addBlock(type, this.$container);\n                    break;\n                }\n\n                case 'delete': {\n                    if (batchAction) {\n                        if (confirm(Craft.t('app', 'Are you sure you want to delete the selected blocks?'))) {\n                            this.matrix.deleteSelectedBlocks();\n                        }\n                    } else {\n                        this.selfDestruct();\n                    }\n\n                    break;\n                }\n            }\n        },\n\n        selfDestruct: function() {\n            // Pause the draft editor\n            if (window.draftEditor) {\n                window.draftEditor.pause();\n            }\n\n            this.$container.velocity(this.matrix.getHiddenBlockCss(this.$container), 'fast', () => {\n                this.$container.remove();\n                this.matrix.updateAddBlockBtn();\n\n                // Resume the draft editor\n                if (window.draftEditor) {\n                    window.draftEditor.resume();\n                }\n\n                this.matrix.trigger('blockDeleted', {\n                    $block: this.$container,\n                });\n            });\n        }\n    });\n})(jQuery);\n"],"sourceRoot":""}