{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./SitesAdmin.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","$","jQuery","Craft","SitesAdmin","Garnish","Base","extend","$groups","$selectedGroup","init","this","find","addListener","$groupSettingsBtn","menuBtn","length","data","settings","onOptionSelect","elem","$elem","hasClass","renameSelectedGroup","deleteSelectedGroup","addNewGroup","promptForGroupName","then","postActionRequest","response","textStatus","success","location","href","getUrl","groupId","group","id","errors","flattenErrors","alert","join","cp","displayError","newName","text","displayNotice","oldName","Promise","resolve","reject","sendActionRequest","$form","class","appendTo","$bod","$body","append","html","$buttons","$cancelBtn","type","$saveBtn","appendFootHtml","js","modal","Modal","onShow","setTimeout","setFocusWithin","onHide","on","ev","preventDefault","val","hide","confirm","responseErrors","attribute","concat","SiteAdminTable","AdminTable","confirmDeleteModal","$rowToDelete","$deleteActionRadios","$deleteSubmitBtn","$deleteSpinner","_deleting","confirmDeleteItem","$row","destroy","_createConfirmDeleteModal","isMobileBrowser","first","trigger","validateDeleteInputs","validates","eq","prop","removeClass","addClass","submitDeleteLocale","disable","getItemId","transferContentTo","$transferSelect","deleteAction","enable","handleDeleteItemResponse","getItemName","getCsrfInput","language","site","sites","escapeHtml"],"mappings":"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","file":"SitesAdmin.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","(function($) {\n    /** global: Craft */\n    /** global: Garnish */\n    Craft.SitesAdmin = Garnish.Base.extend({\n        $groups: null,\n        $selectedGroup: null,\n\n        init: function() {\n            this.$groups = $('#groups');\n            this.$selectedGroup = this.$groups.find('a.sel:first');\n            this.addListener($('#newgroupbtn'), 'activate', 'addNewGroup');\n\n            var $groupSettingsBtn = $('#groupsettingsbtn');\n\n            if ($groupSettingsBtn.length) {\n                var menuBtn = $groupSettingsBtn.data('menubtn');\n\n                menuBtn.settings.onOptionSelect = elem => {\n                    var $elem = $(elem);\n\n                    if ($elem.hasClass('disabled')) {\n                        return;\n                    }\n\n                    switch ($elem.data('action')) {\n                        case 'rename': {\n                            this.renameSelectedGroup();\n                            break;\n                        }\n                        case 'delete': {\n                            this.deleteSelectedGroup();\n                            break;\n                        }\n                    }\n                };\n            }\n        },\n\n        addNewGroup: function() {\n            this.promptForGroupName('').then(name => {\n                if (!name) {\n                    return;\n                }\n\n                let data = {\n                    name: name\n                };\n\n                Craft.postActionRequest('sites/save-group', data, (response, textStatus) => {\n                    if (textStatus === 'success') {\n                        if (response.success) {\n                            location.href = Craft.getUrl('settings/sites', {groupId: response.group.id});\n                        } else if (response.errors) {\n                            var errors = this.flattenErrors(response.errors);\n                            alert(Craft.t('app', 'Could not create the group:') + \"\\n\\n\" + errors.join(\"\\n\"));\n                        } else {\n                            Craft.cp.displayError();\n                        }\n                    }\n                });\n            }).catch(() => {});\n        },\n\n        renameSelectedGroup: function() {\n            this.promptForGroupName(this.$selectedGroup.data('raw-name')).then(newName => {\n                var data = {\n                    id: this.$selectedGroup.data('id'),\n                    name: newName\n                };\n\n                Craft.postActionRequest('sites/save-group', data, (response, textStatus) => {\n                    if (textStatus === 'success') {\n                        if (response.success) {\n                            this.$selectedGroup.text(response.group.name);\n                            this.$selectedGroup.data('raw-name', newName);\n                            Craft.cp.displayNotice(Craft.t('app', 'Group renamed.'));\n                        } else if (response.errors) {\n                            var errors = this.flattenErrors(response.errors);\n                            alert(Craft.t('app', 'Could not rename the group:') + \"\\n\\n\" + errors.join(\"\\n\"));\n                        } else {\n                            Craft.cp.displayError();\n                        }\n                    }\n                });\n            }).catch(() => {});\n        },\n\n        promptForGroupName: function(oldName) {\n            return new Promise((resolve, reject) => {\n                Craft.sendActionRequest('POST', 'sites/rename-group-field', {\n                    data: {name: oldName},\n                }).then(response => {\n                    let $form = $('<form/>', {class: 'modal prompt'}).appendTo(Garnish.$bod);\n                    let $body = $('<div/>', {class: 'body'}).append(response.data.html).appendTo($form);\n                    let $buttons = $('<div/>', {class: 'buttons right'}).appendTo($body);\n                    let $cancelBtn = $('<button/>', {type: 'button', class: 'btn', text: Craft.t('app', 'Cancel')}).appendTo($buttons);\n                    let $saveBtn = $('<button/>', {type: 'submit', class: 'btn submit', text: Craft.t('app', 'Save')}).appendTo($buttons);\n\n                    Craft.appendFootHtml(response.data.js);\n\n                    let success = false;\n                    let modal = new Garnish.Modal($form, {\n                        onShow: () => {\n                            setTimeout(() => {\n                                Craft.setFocusWithin($body);\n                            }, 100);\n                        },\n                        onHide: () => {\n                            if (!success) {\n                                reject();\n                            }\n                        },\n                    });\n\n                    $form.on('submit', ev => {\n                        ev.preventDefault();\n                        let newName = $('.text', $body).val();\n                        if (newName && newName !== oldName) {\n                            resolve(newName);\n                            success = true;\n                        }\n                        modal.hide();\n                    });\n\n                    $cancelBtn.on('click', () => {\n                        modal.hide();\n                    });\n                });\n            });\n        },\n\n        deleteSelectedGroup: function() {\n            if (confirm(Craft.t('app', 'Are you sure you want to delete this group?'))) {\n                var data = {\n                    id: this.$selectedGroup.data('id')\n                };\n\n                Craft.postActionRequest('sites/delete-group', data, (response, textStatus) => {\n                    if (textStatus === 'success') {\n                        if (response.success) {\n                            location.href = Craft.getUrl('settings/sites');\n                        } else {\n                            Craft.cp.displayError();\n                        }\n                    }\n                });\n            }\n        },\n\n        flattenErrors: function(responseErrors) {\n            var errors = [];\n\n            for (var attribute in responseErrors) {\n                if (!responseErrors.hasOwnProperty(attribute)) {\n                    continue;\n                }\n\n                errors = errors.concat(responseErrors[attribute]);\n            }\n\n            return errors;\n        }\n    });\n\n    Craft.SiteAdminTable = Craft.AdminTable.extend({\n        confirmDeleteModal: null,\n\n        $rowToDelete: null,\n        $deleteActionRadios: null,\n        $deleteSubmitBtn: null,\n        $deleteSpinner: null,\n\n        _deleting: false,\n\n        confirmDeleteItem: function($row) {\n            if (this.confirmDeleteModal) {\n                this.confirmDeleteModal.destroy();\n                delete this.confirmDeleteModal;\n            }\n\n            this._createConfirmDeleteModal($row);\n\n            // Auto-focus the first radio\n            if (!Garnish.isMobileBrowser(true)) {\n                setTimeout(() => {\n                    this.$deleteActionRadios.first().trigger('focus');\n                }, 100);\n            }\n\n            return false;\n        },\n\n        validateDeleteInputs: function() {\n            var validates = (\n                this.$deleteActionRadios.eq(0).prop('checked') ||\n                this.$deleteActionRadios.eq(1).prop('checked')\n            );\n\n            if (validates) {\n                this.$deleteSubmitBtn.removeClass('disabled');\n            } else {\n                this.$deleteSubmitBtn.addClass('disabled');\n            }\n\n            return validates;\n        },\n\n        submitDeleteLocale: function(ev) {\n            ev.preventDefault();\n\n            if (this._deleting || !this.validateDeleteInputs()) {\n                return;\n            }\n\n            this.$deleteSubmitBtn.addClass('active');\n            this.$deleteSpinner.removeClass('hidden');\n            this.disable();\n            this._deleting = true;\n\n            var data = {\n                id: this.getItemId(this.$rowToDelete)\n            };\n\n            // Are we transferring content?\n            if (this.$deleteActionRadios.eq(0).prop('checked')) {\n                data.transferContentTo = this.$transferSelect.val();\n            }\n\n            Craft.postActionRequest(this.settings.deleteAction, data, (response, textStatus) => {\n                if (textStatus === 'success') {\n                    this._deleting = false;\n                    this.enable();\n                    this.confirmDeleteModal.hide();\n                    this.handleDeleteItemResponse(response, this.$rowToDelete);\n                }\n            });\n        },\n\n        _createConfirmDeleteModal: function($row) {\n            this.$rowToDelete = $row;\n\n            let id = this.getItemId($row);\n            let name = this.getItemName($row);\n\n            let $form = $(\n                '<form id=\"confirmdeletemodal\" class=\"modal fitted\" method=\"post\" accept-charset=\"UTF-8\">' +\n                Craft.getCsrfInput() +\n                '<input type=\"hidden\" name=\"action\" value=\"localization/deleteLocale\"/>' +\n                '<input type=\"hidden\" name=\"id\" value=\"' + id + '\"/>' +\n                '</form>'\n            ).appendTo(Garnish.$bod);\n            let $body = $(\n                '<div class=\"body\">' +\n                '<p>' + Craft.t('app', 'What do you want to do with any content that is only available in {language}?', {language: name}) + '</p>' +\n                '<div class=\"options\">' +\n                '<label><input type=\"radio\" name=\"contentAction\" value=\"transfer\"/> ' + Craft.t('app', 'Transfer it to:') + '</label> ' +\n                '<div id=\"transferselect\" class=\"select\">' +\n                '<select/>' +\n                '</div>' +\n                '</div>' +\n                '<div>' +\n                '<label><input type=\"radio\" name=\"contentAction\" value=\"delete\"/> ' + Craft.t('app', 'Delete it') + '</label>' +\n                '</div>' +\n                '</div>'\n            ).appendTo($form);\n            let $buttons = $('<div class=\"buttons right\"/>').appendTo($body);\n            let $cancelBtn = $('<button/>', {\n                type: 'button',\n                class: 'btn',\n                text: Craft.t('app', 'Cancel'),\n            }).appendTo($buttons);\n\n            this.$deleteActionRadios = $body.find('input[type=radio]');\n            this.$transferSelect = $('#transferselect').find('> select');\n            this.$deleteSubmitBtn = $('<button/>', {\n                type: 'submit',\n                class: 'btn submit disabled',\n                text: Craft.t('app', 'Delete {site}', {site: name}),\n            }).appendTo($buttons);\n            this.$deleteSpinner = $('<div class=\"spinner hidden\"/>').appendTo($buttons);\n\n            for (var i = 0; i < Craft.sites.length; i++) {\n                if (Craft.sites[i].id != id) {\n                    this.$transferSelect.append('<option value=\"' + Craft.sites[i].id + '\">' + Craft.escapeHtml(Craft.sites[i].name) + '</option>');\n                }\n            }\n\n            this.confirmDeleteModal = new Garnish.Modal($form);\n\n            this.addListener($cancelBtn, 'click', function() {\n                this.confirmDeleteModal.hide();\n            });\n\n            this.addListener(this.$deleteActionRadios, 'change', 'validateDeleteInputs');\n            this.addListener($form, 'submit', 'submitDeleteLocale');\n        }\n    });\n})(jQuery);\n"],"sourceRoot":""}