{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./fields.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","$","FieldsAdmin","jQuery","Garnish","Base","extend","$groups","$selectedGroup","init","this","find","addListener","$groupSettingsBtn","menuBtn","length","data","settings","onOptionSelect","elem","action","renameSelectedGroup","deleteSelectedGroup","addNewGroup","promptForGroupName","Craft","postActionRequest","response","textStatus","success","location","href","getUrl","group","id","errors","flattenErrors","alert","join","cp","displayError","oldName","text","newName","displayNotice","prompt","confirm","responseErrors","attribute","concat","$doc","ready"],"mappings":"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","file":"fields.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","(function($) {\n    /** global: Craft */\n    /** global: Garnish */\n    var FieldsAdmin = Garnish.Base.extend({\n        $groups: null,\n        $selectedGroup: null,\n\n        init: function() {\n            this.$groups = $('#groups');\n            this.$selectedGroup = this.$groups.find('a.sel:first');\n            this.addListener($('#newgroupbtn'), 'activate', 'addNewGroup');\n\n            var $groupSettingsBtn = $('#groupsettingsbtn');\n\n            if ($groupSettingsBtn.length) {\n                var menuBtn = $groupSettingsBtn.data('menubtn');\n\n                menuBtn.settings.onOptionSelect = elem => {\n                    var action = $(elem).data('action');\n\n                    switch (action) {\n                        case 'rename': {\n                            this.renameSelectedGroup();\n                            break;\n                        }\n                        case 'delete': {\n                            this.deleteSelectedGroup();\n                            break;\n                        }\n                    }\n                };\n            }\n        },\n\n        addNewGroup: function() {\n            var name = this.promptForGroupName('');\n\n            if (name) {\n                var data = {\n                    name: name\n                };\n\n                Craft.postActionRequest('fields/save-group', data, (response, textStatus) => {\n                    if (textStatus === 'success') {\n                        if (response.success) {\n                            location.href = Craft.getUrl('settings/fields/' + response.group.id);\n                        } else if (response.errors) {\n                            var errors = this.flattenErrors(response.errors);\n                            alert(Craft.t('app', 'Could not create the group:') + \"\\n\\n\" + errors.join(\"\\n\"));\n                        } else {\n                            Craft.cp.displayError();\n                        }\n                    }\n                });\n            }\n        },\n\n        renameSelectedGroup: function() {\n            var oldName = this.$selectedGroup.text(),\n                newName = this.promptForGroupName(oldName);\n\n            if (newName && newName !== oldName) {\n                var data = {\n                    id: this.$selectedGroup.data('id'),\n                    name: newName\n                };\n\n                Craft.postActionRequest('fields/save-group', data, (response, textStatus) => {\n                    if (textStatus === 'success') {\n                        if (response.success) {\n                            this.$selectedGroup.text(response.group.name);\n                            Craft.cp.displayNotice(Craft.t('app', 'Group renamed.'));\n                        } else if (response.errors) {\n                            var errors = this.flattenErrors(response.errors);\n                            alert(Craft.t('app', 'Could not rename the group:') + \"\\n\\n\" + errors.join(\"\\n\"));\n                        } else {\n                            Craft.cp.displayError();\n                        }\n                    }\n                });\n            }\n        },\n\n        promptForGroupName: function(oldName) {\n            return prompt(Craft.t('app', 'What do you want to name the group?'), oldName);\n        },\n\n        deleteSelectedGroup: function() {\n            if (confirm(Craft.t('app', 'Are you sure you want to delete this group and all its fields?'))) {\n                var data = {\n                    id: this.$selectedGroup.data('id')\n                };\n\n                Craft.postActionRequest('fields/delete-group', data, (response, textStatus) => {\n                    if (textStatus === 'success') {\n                        if (response.success) {\n                            location.href = Craft.getUrl('settings/fields');\n                        } else {\n                            Craft.cp.displayError();\n                        }\n                    }\n                });\n            }\n        },\n\n        flattenErrors: function(responseErrors) {\n            var errors = [];\n\n            for (var attribute in responseErrors) {\n                if (!responseErrors.hasOwnProperty(attribute)) {\n                    continue;\n                }\n\n                errors = errors.concat(responseErrors[attribute]);\n            }\n\n            return errors;\n        }\n    });\n\n    Garnish.$doc.ready(function() {\n        Craft.FieldsAdmin = new FieldsAdmin();\n    });\n})(jQuery);\n"],"sourceRoot":""}