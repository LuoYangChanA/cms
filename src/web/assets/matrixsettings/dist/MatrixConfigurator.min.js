!function(modules){var installedModules={};function __webpack_require__(moduleId){if(installedModules[moduleId])return installedModules[moduleId].exports;var module=installedModules[moduleId]={i:moduleId,l:!1,exports:{}};return modules[moduleId].call(module.exports,module,module.exports,__webpack_require__),module.l=!0,module.exports}__webpack_require__.m=modules,__webpack_require__.c=installedModules,__webpack_require__.d=function(exports,name,getter){__webpack_require__.o(exports,name)||Object.defineProperty(exports,name,{enumerable:!0,get:getter})},__webpack_require__.r=function(exports){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(exports,"__esModule",{value:!0})},__webpack_require__.t=function(value,mode){if(1&mode&&(value=__webpack_require__(value)),8&mode)return value;if(4&mode&&"object"==typeof value&&value&&value.__esModule)return value;var ns=Object.create(null);if(__webpack_require__.r(ns),Object.defineProperty(ns,"default",{enumerable:!0,value:value}),2&mode&&"string"!=typeof value)for(var key in value)__webpack_require__.d(ns,key,function(key){return value[key]}.bind(null,key));return ns},__webpack_require__.n=function(module){var getter=module&&module.__esModule?function getDefault(){return module.default}:function getModuleExports(){return module};return __webpack_require__.d(getter,"a",getter),getter},__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property)},__webpack_require__.p="/",__webpack_require__(__webpack_require__.s=0)}([function(module,exports){!function($){Craft.MatrixConfigurator=Garnish.Base.extend({fieldTypeInfo:null,inputNamePrefix:null,fieldTypeSettingsNamespace:null,inputIdPrefix:null,placeholderKey:null,$container:null,$blockTypesColumnContainer:null,$fieldsColumnContainer:null,$fieldSettingsColumnContainer:null,$blockTypeItemsOuterContainer:null,$blockTypeItemsContainer:null,$fieldItemsContainer:null,$fieldSettingItemsContainer:null,$newBlockTypeBtn:null,$newFieldBtn:null,blockTypes:null,selectedBlockType:null,blockTypeSort:null,totalNewBlockTypes:0,_fieldTypeSettingsHtml:null,_cancelToken:null,_ignoreFailedRequest:!1,init:function init(fieldTypeInfo,inputNamePrefix,fieldTypeSettingsNamespace,placeholderKey){this.fieldTypeInfo=fieldTypeInfo,this.inputNamePrefix=inputNamePrefix,this.fieldTypeSettingsNamespace=fieldTypeSettingsNamespace,this.inputIdPrefix=Craft.formatInputId(this.inputNamePrefix),this.placeholderKey=placeholderKey,this.$container=$("#"+this.inputIdPrefix+"-matrix-configurator:first .input:first"),this.$blockTypesColumnContainer=this.$container.children(".block-types").children(),this.$fieldsColumnContainer=this.$container.children(".mc-fields").children(),this.$fieldSettingsColumnContainer=this.$container.children(".mc-field-settings").children(),this.$blockTypeItemsOuterContainer=this.$blockTypesColumnContainer.children(".mc-col-items"),this.$blockTypeItemsContainer=this.$blockTypeItemsOuterContainer.children(".mc-blocktypes"),this.$fieldItemsOuterContainer=this.$fieldsColumnContainer.children(".mc-col-items"),this.$fieldSettingItemsContainer=this.$fieldSettingsColumnContainer.children(".mc-col-items"),this.$newBlockTypeBtn=this.$blockTypeItemsOuterContainer.children(".btn"),this.$newFieldBtn=this.$fieldItemsOuterContainer.children(".btn"),this._fieldTypeSettingsHtml={},this.blockTypes={};for(var $blockTypeItems=this.$blockTypeItemsContainer.children(),i=0;i<$blockTypeItems.length;i++){var $item=$($blockTypeItems[i]),id=$item.data("id");this.blockTypes[id]=new BlockType(this,$item);var newMatch="string"==typeof id&&id.match(/new(\d+)/);newMatch&&newMatch[1]>this.totalNewBlockTypes&&(this.totalNewBlockTypes=parseInt(newMatch[1]))}this.blockTypeSort=new Garnish.DragSort($blockTypeItems,{handle:".move",axis:"y"}),this.addListener(this.$newBlockTypeBtn,"click","addBlockType"),this.addListener(this.$newFieldBtn,"click","addFieldToSelectedBlockType")},getFieldTypeInfo:function getFieldTypeInfo(type){for(var i=0;i<this.fieldTypeInfo.length;i++)if(this.fieldTypeInfo[i].type===type)return this.fieldTypeInfo[i]},addBlockType:function addBlockType(){var _this=this;this.getBlockTypeSettingsModal(),this.blockTypeSettingsModal.show(),this.blockTypeSettingsModal.onSubmit=function(name,handle){_this.totalNewBlockTypes++;var id="new"+_this.totalNewBlockTypes,$item=$('<div class="matrixconfigitem mci-blocktype" data-id="'+id+'"><div class="mci-name"><h4></h4><div class="smalltext light code"></div></div><a class="settings icon" title="'+Craft.t("app","Settings")+'"></a><a class="move icon" title="'+Craft.t("app","Reorder")+'"></a><input class="hidden" name="'+_this.inputNamePrefix+"[blockTypes]["+id+'][name]"><input class="hidden" name="'+_this.inputNamePrefix+"[blockTypes]["+id+'][handle]"></div>').appendTo(_this.$blockTypeItemsContainer);_this.blockTypes[id]=new BlockType(_this,$item),_this.blockTypes[id].applySettings(name,handle),_this.blockTypes[id].select(),_this.blockTypes[id].addField(),_this.blockTypeSort.addItems($item)}},addFieldToSelectedBlockType:function addFieldToSelectedBlockType(){this.selectedBlockType&&this.selectedBlockType.addField()},getBlockTypeSettingsModal:function getBlockTypeSettingsModal(){return this.blockTypeSettingsModal||(this.blockTypeSettingsModal=new BlockTypeSettingsModal),this.blockTypeSettingsModal},getFieldTypeSettingsHtml:function getFieldTypeSettingsHtml(type){var _this2=this;return new Promise((function(resolve,reject){void 0===_this2._fieldTypeSettingsHtml[type]?(_this2._cancelToken&&(_this2._ignoreFailedRequest=!0,_this2._cancelToken.cancel(),Garnish.requestAnimationFrame((function(){_this2._ignoreFailedRequest=!1}))),_this2._cancelToken=axios.CancelToken.source(),Craft.sendActionRequest("POST","fields/render-settings",{cancelToken:_this2._cancelToken.token,data:{type:type,namespace:_this2.fieldTypeSettingsNamespace}}).then((function(response){_this2._fieldTypeSettingsHtml[type]=response.data,resolve(response.data)})).catch((function(){_this2._ignoreFailedRequest||Craft.cp.displayError(Craft.t("app","A server error occurred.")),reject()}))):resolve(_this2._fieldTypeSettingsHtml[type])}))}});var BlockTypeSettingsModal=Garnish.Modal.extend({init:function init(){this.base(),this.$form=$('<form class="modal fitted"/>').appendTo(Garnish.$bod),this.setContainer(this.$form),this.$body=$('<div class="body"/>').appendTo(this.$form);var $nameField,$nameInputContainer=Craft.ui.createTextField({label:Craft.t("app","Name"),instructions:Craft.t("app","What this block type will be called in the control panel.")}).appendTo(this.$body).find(".input");this.$nameInput=$nameInputContainer.find(".text"),this.$nameErrorList=$('<ul class="errors"/>').appendTo($nameInputContainer).hide();var $handleField,$handleInputContainer=Craft.ui.createTextField({label:Craft.t("app","Handle"),instructions:Craft.t("app","How youâ€™ll refer to this block type in the templates."),class:"code",maxlength:47}).appendTo(this.$body).find(".input");this.$handleInput=$handleInputContainer.find(".text"),this.$handleErrorList=$('<ul class="errors"/>').appendTo($handleInputContainer).hide(),this.$deleteBtn=$('<a class="error left hidden" style="line-height: 30px;">'+Craft.t("app","Delete")+"</a>").appendTo(this.$body),this.$buttons=$('<div class="buttons right" style="margin-top: 0;"/>').appendTo(this.$body),this.$cancelBtn=$("<button/>",{type:"button",class:"btn",text:Craft.t("app","Cancel")}).appendTo(this.$buttons),this.$submitBtn=$("<button/>",{type:"submit",class:"btn submit"}).appendTo(this.$buttons),this.handleGenerator=new Craft.HandleGenerator(this.$nameInput,this.$handleInput),this.addListener(this.$cancelBtn,"click","hide"),this.addListener(this.$form,"submit","onFormSubmit"),this.addListener(this.$deleteBtn,"click","onDeleteClick")},onFormSubmit:function onFormSubmit(ev){if(ev.preventDefault(),this.visible){this.handleGenerator.listening&&this.handleGenerator.updateTarget();var name=Craft.trim(this.$nameInput.val()),handle=Craft.trim(this.$handleInput.val());name&&handle?(this.hide(),this.onSubmit(name,handle)):Garnish.shake(this.$form)}},onDeleteClick:function onDeleteClick(){confirm(Craft.t("app","Are you sure you want to delete this block type?"))&&(this.hide(),this.onDelete())},show:function show(name,handle,errors){var _this3=this;this.$nameInput.val("string"==typeof name?name:""),this.$handleInput.val("string"==typeof handle?handle:""),handle?this.handleGenerator.stopListening():this.handleGenerator.startListening(),void 0===name?(this.$deleteBtn.addClass("hidden"),this.$submitBtn.text(Craft.t("app","Create"))):(this.$deleteBtn.removeClass("hidden"),this.$submitBtn.text(Craft.t("app","Apply"))),this.displayErrors("name",errors?errors.name:null),this.displayErrors("handle",errors?errors.handle:null),Garnish.isMobileBrowser()||setTimeout((function(){_this3.$nameInput.trigger("focus")}),100),this.base()},displayErrors:function displayErrors(attr,errors){var $input=this["$"+attr+"Input"],$errorList=this["$"+attr+"ErrorList"];if($errorList.children().remove(),errors){$input.addClass("error"),$errorList.show();for(var i=0;i<errors.length;i++)$("<li/>").text(errors[i]).appendTo($errorList)}else $input.removeClass("error"),$errorList.hide()}}),BlockType=Garnish.Base.extend({configurator:null,id:null,errors:null,inputNamePrefix:null,inputIdPrefix:null,$item:null,$nameLabel:null,$handleLabel:null,$nameHiddenInput:null,$handleHiddenInput:null,$settingsBtn:null,$fieldItemsContainer:null,$fieldSettingsContainer:null,fields:null,selectedField:null,fieldSort:null,totalNewFields:0,fieldSettings:null,init:function init(configurator,$item){var _this4=this;this.configurator=configurator,this.$item=$item,this.id=this.$item.data("id"),this.errors=this.$item.data("errors"),this.inputNamePrefix=this.configurator.inputNamePrefix+"[blockTypes]["+this.id+"]",this.inputIdPrefix=this.configurator.inputIdPrefix+"-blockTypes-"+this.id;var $nameContainer=this.$item.children(".mci-name");this.$nameLabel=$nameContainer.children("h4"),this.$handleLabel=$nameContainer.children(".smalltext"),this.$nameHiddenInput=this.$item.find('input[name$="[name]"]:first'),this.$handleHiddenInput=this.$item.find('input[name$="[handle]"]:first'),this.$settingsBtn=this.$item.find(".settings"),this.$fieldItemsContainer=this.configurator.$fieldItemsOuterContainer.children('[data-id="'+this.id+'"]:first'),this.$fieldItemsContainer.length||(this.$fieldItemsContainer=$('<div data-id="'+this.id+'"/>').insertBefore(this.configurator.$newFieldBtn)),this.$fieldSettingsContainer=this.configurator.$fieldSettingItemsContainer.children('[data-id="'+this.id+'"]:first'),this.$fieldSettingsContainer.length||(this.$fieldSettingsContainer=$('<div data-id="'+this.id+'"/>').appendTo(this.configurator.$fieldSettingItemsContainer)),this.fields={};for(var $fieldItems=this.$fieldItemsContainer.children(),i=0;i<$fieldItems.length;i++){var $fieldItem=$($fieldItems[i]),id=$fieldItem.data("id");this.fields[id]=new Field(this.configurator,this,$fieldItem);var newMatch="string"==typeof id&&id.match(/new(\d+)/);newMatch&&newMatch[1]>this.totalNewFields&&(this.totalNewFields=parseInt(newMatch[1]))}this.addListener(this.$item,"click","select"),this.addListener(this.$settingsBtn,"click","showSettings"),this.fieldSort=new Garnish.DragSort($fieldItems,{handle:".move",axis:"y",onSortChange:function onSortChange(){for(var i=0;i<_this4.fieldSort.$items.length;i++){var $item,id=$(_this4.fieldSort.$items[i]).data("id"),field;_this4.fields[id].$fieldSettingsContainer.appendTo(_this4.$fieldSettingsContainer)}}})},select:function select(){this.configurator.selectedBlockType!==this&&(this.configurator.selectedBlockType&&this.configurator.selectedBlockType.deselect(),this.configurator.$fieldsColumnContainer.removeClass("hidden"),this.$fieldItemsContainer.removeClass("hidden"),this.$item.addClass("sel"),this.configurator.selectedBlockType=this,Garnish.$win.trigger("resize"))},deselect:function deselect(){this.$item.removeClass("sel"),this.configurator.$fieldsColumnContainer.addClass("hidden"),this.$fieldItemsContainer.addClass("hidden"),this.$fieldSettingsContainer.addClass("hidden"),this.configurator.selectedBlockType=null,this.selectedField&&this.selectedField.deselect(),Garnish.$win.trigger("resize")},showSettings:function showSettings(){var blockTypeSettingsModal=this.configurator.getBlockTypeSettingsModal();blockTypeSettingsModal.show(this.$nameHiddenInput.val(),this.$handleHiddenInput.val(),this.errors),blockTypeSettingsModal.onSubmit=this.applySettings.bind(this),blockTypeSettingsModal.onDelete=this.selfDestruct.bind(this)},applySettings:function applySettings(name,handle){this.errors&&(this.errors=null,this.$settingsBtn.removeClass("error")),this.$nameLabel.text(name),this.$handleLabel.text(handle),this.$nameHiddenInput.val(name),this.$handleHiddenInput.val(handle)},addField:function addField(){this.totalNewFields++;var id="new"+this.totalNewFields,$item=$('<div class="matrixconfigitem mci-field" data-id="'+id+'"><div class="mci-name"><h4><em class="light">'+Craft.t("app","(blank)")+'</em></h4><div class="smalltext light code"></div></div><div class="actions"><a class="move icon" title="'+Craft.t("app","Reorder")+'"></a></div></div>').appendTo(this.$fieldItemsContainer);this.fields[id]=new Field(this.configurator,this,$item),this.fields[id].select(),this.fieldSort.addItems($item)},selfDestruct:function selfDestruct(){this.deselect(),this.$item.remove(),this.$fieldItemsContainer.remove(),this.$fieldSettingsContainer.remove(),this.configurator.blockTypes[this.id]=null,delete this.configurator.blockTypes[this.id]}}),Field=Garnish.Base.extend({configurator:null,blockType:null,id:null,inputNamePrefix:null,inputIdPrefix:null,selectedFieldType:null,initializedFieldTypeSettings:null,$item:null,$nameLabel:null,$handleLabel:null,$fieldSettingsContainer:null,$nameInput:null,$handleInput:null,$requiredCheckbox:null,$typeSelect:null,$translationSettingsContainer:null,$typeSettingsContainer:null,$widthInput:null,$deleteBtn:null,init:function init(configurator,blockType,$item){var _this5=this;this.configurator=configurator,this.blockType=blockType,this.$item=$item,this.id=this.$item.data("id"),this.inputNamePrefix=this.blockType.inputNamePrefix+"[fields]["+this.id+"]",this.inputIdPrefix=this.blockType.inputIdPrefix+"-fields-"+this.id,this.initializedFieldTypeSettings={},this.fieldTypeSettingsTemplates={};var $nameContainer=this.$item.children(".mci-name");this.$nameLabel=$nameContainer.children("h4"),this.$handleLabel=$nameContainer.children(".smalltext"),this.$fieldSettingsContainer=this.blockType.$fieldSettingsContainer.children('[data-id="'+this.id+'"]:first');var isNew=!this.$fieldSettingsContainer.length,widthSlider;isNew&&(this.$fieldSettingsContainer=this.getDefaultFieldSettings().appendTo(this.blockType.$fieldSettingsContainer)),this.$nameInput=$("#"+this.inputIdPrefix+"-name"),this.$handleInput=$("#"+this.inputIdPrefix+"-handle"),this.$requiredCheckbox=$("#"+this.inputIdPrefix+"-required"),this.$typeSelect=$("#"+this.inputIdPrefix+"-type"),this.$translationSettingsContainer=$("#"+this.inputIdPrefix+"-translation-settings"),this.$typeSettingsContainer=this.$fieldSettingsContainer.children(".mc-fieldtype-settings:first"),this.$widthInput=$("#"+this.inputIdPrefix+"-width"),this.$deleteBtn=this.$fieldSettingsContainer.children("a.delete:first"),isNew?this.setFieldType("craft\\fields\\PlainText"):(this.selectedFieldType=this.$typeSelect.val(),this.initializedFieldTypeSettings[this.selectedFieldType]=this.$typeSettingsContainer.children()),this.$handleInput.val()||new Craft.HandleGenerator(this.$nameInput,this.$handleInput),this.addListener(this.$item,"click","select"),this.addListener(this.$nameInput,"input","updateNameLabel"),this.addListener(this.$handleInput,"input","updateHandleLabel"),this.addListener(this.$requiredCheckbox,"change","updateRequiredIcon"),this.addListener(this.$typeSelect,"change","onTypeSelectChange"),this.addListener(this.$deleteBtn,"click","confirmDelete"),new Craft.SlidePicker(this.$widthInput.val()||100,{min:25,max:100,step:25,valueLabel:function valueLabel(width){return Craft.t("app","{pct} width",{pct:"".concat(width,"%")})},onChange:function onChange(width){_this5.$widthInput.val(width)}}).$container.insertAfter($nameContainer)},select:function select(){var _this6=this;this.blockType.selectedField!==this&&(this.blockType.selectedField&&this.blockType.selectedField.deselect(),this.configurator.$fieldSettingsColumnContainer.removeClass("hidden"),this.blockType.$fieldSettingsContainer.removeClass("hidden"),this.$fieldSettingsContainer.removeClass("hidden"),this.$item.addClass("sel"),this.blockType.selectedField=this,Garnish.$win.trigger("resize"),Garnish.isMobileBrowser()||setTimeout((function(){_this6.$nameInput.trigger("focus")}),100))},deselect:function deselect(){this.$item.removeClass("sel"),this.configurator.$fieldSettingsColumnContainer.addClass("hidden"),this.blockType.$fieldSettingsContainer.addClass("hidden"),this.$fieldSettingsContainer.addClass("hidden"),this.blockType.selectedField=null,Garnish.$win.trigger("resize")},updateNameLabel:function updateNameLabel(){var val=this.$nameInput.val();this.$nameLabel.html(val?Craft.escapeHtml(val):'<em class="light">'+Craft.t("app","(blank)")+"</em>")},updateHandleLabel:function updateHandleLabel(){this.$handleLabel.html(Craft.escapeHtml(this.$handleInput.val()))},updateRequiredIcon:function updateRequiredIcon(){this.$requiredCheckbox.prop("checked")?this.$nameLabel.addClass("mci-required"):this.$nameLabel.removeClass("mci-required")},onTypeSelectChange:function onTypeSelectChange(){this.setFieldType(this.$typeSelect.val())},setFieldType:function setFieldType(type){var _this7=this;Craft.updateTranslationMethodSettings(type,this.$translationSettingsContainer),this.selectedFieldType&&this.initializedFieldTypeSettings[this.selectedFieldType].detach(),this.selectedFieldType=type,this.$typeSelect.val(type),this.$typeSettingsContainer.html('<div class="zilch"><div class="spinner"></div></div>'),this.getFieldTypeSettings(type).then((function(_ref){var fresh=_ref.fresh,$settings=_ref.$settings,headHtml=_ref.headHtml,footHtml=_ref.footHtml;_this7.$typeSettingsContainer.html("").append($settings),fresh&&(Craft.initUiElements($settings),Craft.appendHeadHtml(headHtml),Craft.appendFootHtml(footHtml)),Garnish.$win.trigger("resize")})).catch((function(){_this7.$typeSettingsContainer.html("")}))},getFieldTypeSettings:function getFieldTypeSettings(type){var _this8=this;return new Promise((function(resolve,reject){void 0===_this8.initializedFieldTypeSettings[type]?_this8.configurator.getFieldTypeSettingsHtml(type).then((function(_ref2){var settingsHtml=_ref2.settingsHtml,headHtml=_ref2.headHtml,footHtml=_ref2.footHtml;settingsHtml=_this8.getParsedFieldTypeHtml(settingsHtml),headHtml=_this8.getParsedFieldTypeHtml(headHtml),footHtml=_this8.getParsedFieldTypeHtml(footHtml);var $settings=$("<div/>").html(settingsHtml);_this8.initializedFieldTypeSettings[type]=$settings,resolve({fresh:!0,$settings:$settings,headHtml:headHtml,footHtml:footHtml})})).catch($.noop):resolve({fresh:!1,$settings:_this8.initializedFieldTypeSettings[type]})}))},getParsedFieldTypeHtml:function getParsedFieldTypeHtml(html){return html="string"==typeof html?(html=html.replace(new RegExp("__BLOCK_TYPE_".concat(this.configurator.placeholderKey,"__"),"g"),this.blockType.id)).replace(new RegExp("__FIELD_".concat(this.configurator.placeholderKey,"__"),"g"),this.id):""},getDefaultFieldSettings:function getDefaultFieldSettings(){var $container=$("<div/>",{"data-id":this.id});Craft.ui.createTextField({label:Craft.t("app","Name"),id:this.inputIdPrefix+"-name",name:this.inputNamePrefix+"[name]"}).appendTo($container),Craft.ui.createTextField({label:Craft.t("app","Handle"),id:this.inputIdPrefix+"-handle",class:"code",name:this.inputNamePrefix+"[handle]",maxlength:64,required:!0}).appendTo($container),Craft.ui.createTextareaField({label:Craft.t("app","Instructions"),id:this.inputIdPrefix+"-instructions",class:"nicetext",name:this.inputNamePrefix+"[instructions]"}).appendTo($container);var $fieldset=$("<fieldset/>").appendTo($container);Craft.ui.createCheckboxField({label:Craft.t("app","This field is required"),id:this.inputIdPrefix+"-required",name:this.inputNamePrefix+"[required]"}).appendTo($fieldset),Craft.ui.createCheckboxField({label:Craft.t("app","Use this fieldâ€™s values as search keywords"),id:this.inputIdPrefix+"-searchable",name:this.inputNamePrefix+"[searchable]",checked:!1}).appendTo($fieldset);for(var fieldTypeOptions=[],i=0;i<this.configurator.fieldTypeInfo.length;i++)fieldTypeOptions.push({value:this.configurator.fieldTypeInfo[i].type,label:this.configurator.fieldTypeInfo[i].name});if(Craft.ui.createSelectField({label:Craft.t("app","Field Type"),id:this.inputIdPrefix+"-type",name:this.inputNamePrefix+"[type]",options:fieldTypeOptions,value:"craft\\fields\\PlainText"}).appendTo($container),Craft.isMultiSite){var $translationSettingsContainer=$("<div/>",{id:this.inputIdPrefix+"-translation-settings"}).appendTo($container);Craft.ui.createSelectField({label:Craft.t("app","Translation Method"),id:this.inputIdPrefix+"-translation-method",name:this.inputNamePrefix+"[translationMethod]",options:[],value:"none",toggle:!0,targetPrefix:this.inputIdPrefix+"-translation-method-"}).appendTo($translationSettingsContainer);var $translationKeyFormatContainer=$("<div/>",{id:this.inputIdPrefix+"-translation-method-custom",class:"hidden"}).appendTo($translationSettingsContainer);Craft.ui.createTextField({label:Craft.t("app","Translation Key Format"),id:this.inputIdPrefix+"-translation-key-format",name:this.inputNamePrefix+"[translationKeyFormat]"}).appendTo($translationKeyFormatContainer)}return $("<hr/>").appendTo($container),$("<div/>",{class:"mc-fieldtype-settings"}).appendTo($container),$("<input/>",{type:"hidden",id:this.inputIdPrefix+"-width",name:this.inputNamePrefix+"[width]",value:"100"}).appendTo($container),$("<hr/>").appendTo($container),$("<a/>",{class:"error delete",text:Craft.t("app","Delete")}).appendTo($container),$container},confirmDelete:function confirmDelete(){confirm(Craft.t("app","Are you sure you want to delete this field?"))&&this.selfDestruct()},selfDestruct:function selfDestruct(){this.deselect(),this.$item.remove(),this.$fieldSettingsContainer.remove(),this.blockType.fields[this.id]=null,delete this.blockType.fields[this.id]}})}(jQuery)}]);
//# sourceMappingURL=MatrixConfigurator.min.js.map